function registerproperty(string _location, uint _cost) public isOwner
    {
        totalPropertyCounter = totalPropertyCounter + 1;
        property memory myproperty = property(
            {
                ownerAddress: msg.sender,
                location: _location,
                cost: _cost,
                ID: totalPropertyCounter
            });
        __properties[msg.sender].push(myproperty);
        Register(msg.sender, totalPropertyCounter);
}




function transferProperty(address _Buyer, uint _ID) public returns (bool)
    {
        for(uint i=0; i < (__properties[msg.sender].length);i++)    
        {
            if (__properties[msg.sender][i].ID == _ID)
            {
                property memory myproperty = property(
                  {
                    ownerAddress:_Buyer,
                    location: __properties[msg.sender][i].location,
                    cost: __properties[msg.sender][i].cost,
                    ID: _ID
                  });
                __properties[_Buyer].push(myproperty);   
                
                delete __properties[msg.sender][i];
                Transfer(msg.sender, _Buyer, _ID);                
                return true;
            }
        }
        return false;
    }





function getProperties(address _propertyHolder, uint _index) public returns (string, uint, address,uint)
    {
        return (__properties[_propertyHolder][_index].location, 
                __properties[_propertyHolder][_index].cost,
                __properties[_propertyHolder][_index].ownerAddress,
                __properties[_propertyHolder][_index].ID);
                
    }


function getNoOfProperties(address __propertyHolder) public returns (uint)
    {
        return __properties[_propertyHolder].length;
    }


